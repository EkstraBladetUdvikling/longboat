(function(){'use strict';function __rest(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==='function')for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]]}return t}var ENVIRONMENT;(function(ENVIRONMENT){ENVIRONMENT['debug']='debug';ENVIRONMENT['development']='development';ENVIRONMENT['production']='production';ENVIRONMENT['staging']='staging';ENVIRONMENT['test']='test';ENVIRONMENT['unittest']='unittest'})(ENVIRONMENT||(ENVIRONMENT={}));var LONGBOATURLS;(function(LONGBOATURLS){LONGBOATURLS['debug']='';LONGBOATURLS['prod']='https://longboat.ekstrabladet.dk';LONGBOATURLS['test']='https://longboat-test.ekstrabladet.dk'})(LONGBOATURLS||(LONGBOATURLS={}));function validateProperties(checkProps){const status=['aid','ht'].find((prop=>!checkProps[prop]));return!status}class Longboat{constructor(longboat){this.exposedQueue=[];this.properties={url:window.location.href};this.queue=[];this.baseUrl=LONGBOATURLS.prod;this.environment=ENVIRONMENT.production;this.existingQueue=[];this.uniqueEvents={};this.uniqueQueue=[];this.readyStatus=false;if(longboat){if(longboat.properties){this.properties=Object.assign(Object.assign({},this.properties),longboat.properties)}if(longboat.queue)this.existingQueue=longboat.queue}Object.defineProperty(this.queue,'push',{configurable:false,enumerable:false,value:(...args)=>{this.resolveQueue(args);return args.length},writable:false})}ready(){this.readyStatus=true;this.resolveQueue(this.existingQueue)}setEnvironment(environment){switch(environment.toLowerCase()){case ENVIRONMENT.debug:this.baseUrl=LONGBOATURLS.debug;break;case ENVIRONMENT.development:case ENVIRONMENT.test:this.baseUrl=LONGBOATURLS.test;break;case ENVIRONMENT.production:case ENVIRONMENT.staging:default:this.baseUrl=LONGBOATURLS.prod;break}this.environment=environment}setProperties(propertiesObject){try{this.properties=Object.assign(Object.assign({},this.properties),propertiesObject)}catch(err){console.error('longboat.setProperties',err)}}buildQuery(trackingObject,once=true){try{if(once&&!this.isUnique(trackingObject)){console.warn(`This has been tracked already ${trackingObject.ht} - ${JSON.stringify(trackingObject)}`);return}const queryObject=Object.assign(Object.assign({ets:Date.now()},this.properties),trackingObject);if(!validateProperties(queryObject)){console.warn('Missing mandatory properties');return}const queryArray=Object.entries(queryObject).map((([key,value])=>`${key}=${value}`));this.send(`?${queryArray.join('&')}`)}catch(err){console.error('longboat.buildQuery',err)}}isUnique(trackingObject){const trackingObjectString=JSON.stringify(trackingObject);const exists=this.uniqueQueue.find((el=>el===trackingObjectString));if(exists)return false;this.uniqueQueue.push(trackingObjectString);return true}resolveQueue(queue){try{while(queue.length){const addedObject=queue.shift();if(this.environment===ENVIRONMENT.debug){this.exposedQueue.push(addedObject)}if(this.readyStatus){if(typeof addedObject==='function'){addedObject()}else if(addedObject.eventType){this.track(addedObject)}}else{this.existingQueue.push(addedObject)}}}catch(err){console.error('longboat.resolveQueue',err)}}send(query){try{if(this.baseUrl===LONGBOATURLS.debug){console.debug('send this:',query)}else{window.navigator.sendBeacon(this.baseUrl+query)}}catch(err){console.error('longboat.send',err,'query',query)}}track(trackObj){const{eventType:eventType,once:once}=trackObj,additionalProperties=__rest(trackObj,['eventType','once']);this.uniqueEvents[eventType]=this.uniqueEvents[eventType]||0;this.uniqueEvents[eventType]++;this.buildQuery(Object.assign({ht:eventType},additionalProperties),once)}}(longboat=>{window.longboat=new Longboat(longboat);window.longboat.ready()})(window.longboat)})();
